A = array(2, double, [8, 8])
u = array(3, double, [8, 8, 8])
D = array(3, double, [8, 8, 8])
At = vtranspose(A, 1, 2)
tmp1 = contract(At, u, [2, 1])
tmp2 = contract(At, tmp1, [2, 2])
tmp3 = contract(At, tmp2, [2, 3])
tmp4 = entrywise_mul(D, tmp3)
tmp5 = contract(A, tmp4, [2, 1])
tmp6 = contract(A, tmp5, [2, 2])
v = contract(A, tmp6, [2, 3])

i1 = iterator(0, 8, 1)
i2 = iterator(0, 8, 1)
i3 = iterator(0, 8, 1)
i4 = iterator(0, 8, 1)
j1 = iterator(0, 8, 1)
j2 = iterator(0, 8, 1)
j3 = iterator(0, 8, 1)
j4 = iterator(0, 8, 1)
k1 = iterator(0, 8, 1)
k2 = iterator(0, 8, 1)
k3 = iterator(0, 8, 1)
k4 = iterator(0, 8, 1)
l1 = iterator(0, 8, 1)
l2 = iterator(0, 8, 1)
l3 = iterator(0, 8, 1)
i12 = iterator(0, 8, 1)
i22 = iterator(0, 8, 1)
i32 = iterator(0, 8, 1)
i42 = iterator(0, 8, 1)
j12 = iterator(0, 8, 1)
j22 = iterator(0, 8, 1)
j32 = iterator(0, 8, 1)
j42 = iterator(0, 8, 1)
k12 = iterator(0, 8, 1)
k22 = iterator(0, 8, 1)
k32 = iterator(0, 8, 1)
k42 = iterator(0, 8, 1)

build(tmp1, [i1, i2, i3, i4])
build(tmp2, [j1, j2, j3, j4])
build(tmp3, [k1, k2, k3, k4])
build(tmp4, [l1, l2, l3])
build(tmp5, [i12, i22, i32, i42])
build(tmp6, [j12, j22, j32, j42])
build(v, [k12, k22, k32, k42])



unroll_and_fuse(i1, 4)
parallelize(i1, VEC, None, None)
unroll_and_fuse(j1, 4)
parallelize(j1, VEC, None, None)
unroll_and_fuse(k1, 4)
parallelize(k1, VEC, None, None)
unroll_and_fuse(l1, 4)
parallelize(l1, VEC, None, None)
unroll_and_fuse(i12, 4)
parallelize(i12, VEC, None, None)
unroll_and_fuse(j12, 4)
parallelize(j12, VEC, None, None)
unroll_and_fuse(k12, 4)
parallelize(k12, VEC, None, None)
unroll_and_fuse(i1, 4)
parallelize(i1, VEC, None, None)
unroll_and_fuse(j1, 4)
parallelize(j1, VEC, None, None)
unroll_and_fuse(k1, 4)
parallelize(k1, VEC, None, None)
unroll_and_fuse(l1, 4)
parallelize(l1, VEC, None, None)
unroll_and_fuse(i12, 4)
parallelize(i12, VEC, None, None)
unroll_and_fuse(j12, 4)
parallelize(j12, VEC, None, None)
unroll_and_fuse(k12, 4)
parallelize(k12, VEC, None, None)
unroll_and_fuse(i1, 4)
parallelize(i1, VEC, None, None)
unroll_and_fuse(j1, 4)
parallelize(j1, VEC, None, None)
unroll_and_fuse(k1, 4)
parallelize(k1, VEC, None, None)
unroll_and_fuse(l1, 4)
parallelize(l1, VEC, None, None)
unroll_and_fuse(i12, 4)
parallelize(i12, VEC, None, None)
unroll_and_fuse(j12, 4)
parallelize(j12, VEC, None, None)
unroll_and_fuse(k12, 4)
parallelize(k12, VEC, None, None)
unroll_and_fuse(i1, 4)
parallelize(i1, VEC, None, None)
unroll_and_fuse(j1, 4)
parallelize(j1, VEC, None, None)
unroll_and_fuse(k1, 4)
parallelize(k1, VEC, None, None)
unroll_and_fuse(l1, 4)
parallelize(l1, VEC, None, None)
unroll_and_fuse(i12, 4)
parallelize(i12, VEC, None, None)
unroll_and_fuse(j12, 4)
parallelize(j12, VEC, None, None)
unroll_and_fuse(k12, 4)
parallelize(k12, VEC, None, None)
